# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: PR

on:
  pull_request:
    branches: [master, v1]
# Ignoring the docs prevents PRs touching only docs from succeeding.
#    paths-ignore:
#      - "docs/**"

concurrency:
  # For PRs, use the ref (branch) in the concurrency group so that new pushes cancel any old runs.
  # For pushes to master, ideally we wouldn't set a concurrency group, but github actions doesn't
  # support conditional blocks of settings, so we use the SHA so the "group" is unique.
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.sha || github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  build:
    strategy:
      matrix:
        node: [18.x, 20.x, 22.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node }}

      - run: yarn --immutable

      - name: Code Format Check
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.node == '22.x' }}
        run: yarn format:check

      - name: Check Change Files
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.node == '22.x' }}
        run: yarn checkchange

      # @see https://www.npmjs.com/package/syncpack
      - name: Check consistent package.json dep versions
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.node == '22.x' }}
        run: yarn syncpack list-mismatches

      - name: Dependency checks
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.node == '22.x' }}
        run: yarn lage depcheck

      - name: Build, Test, Lint
        run: yarn ci --concurrency 2 --verbose
        env:
          BACKFILL_CACHE_PROVIDER: ${{ secrets.backfill_cache_provider }}
          BACKFILL_CACHE_PROVIDER_OPTIONS: ${{ secrets.backfill_cache_provider_options }}
