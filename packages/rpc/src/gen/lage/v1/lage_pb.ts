// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file lage/v1/lage.proto (package connectrpc.lage.v1, syntax proto3)
/* eslint-disable */

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message connectrpc.lage.v1.RunTargetRequest
 */
export class RunTargetRequest extends Message<RunTargetRequest> {
  /**
   * @generated from field: string cwd = 1;
   */
  cwd = "";

  /**
   * @generated from field: string task = 2;
   */
  task = "";

  constructor(data?: PartialMessage<RunTargetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "connectrpc.lage.v1.RunTargetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "cwd", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "task", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RunTargetRequest {
    return new RunTargetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RunTargetRequest {
    return new RunTargetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RunTargetRequest {
    return new RunTargetRequest().fromJsonString(jsonString, options);
  }

  static equals(
    a: RunTargetRequest | PlainMessage<RunTargetRequest> | undefined,
    b: RunTargetRequest | PlainMessage<RunTargetRequest> | undefined
  ): boolean {
    return proto3.util.equals(RunTargetRequest, a, b);
  }
}

/**
 * @generated from message connectrpc.lage.v1.RunTargetResponse
 */
export class RunTargetResponse extends Message<RunTargetResponse> {
  /**
   * @generated from field: string package_name = 1;
   */
  packageName = "";

  /**
   * @generated from field: string task = 2;
   */
  task = "";

  /**
   * @generated from field: string stdout = 3;
   */
  stdout = "";

  /**
   * @generated from field: string stderr = 4;
   */
  stderr = "";

  /**
   * @generated from field: int32 exit_code = 5;
   */
  exitCode = 0;

  constructor(data?: PartialMessage<RunTargetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "connectrpc.lage.v1.RunTargetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "package_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "task", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "stdout", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "stderr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "exit_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RunTargetResponse {
    return new RunTargetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RunTargetResponse {
    return new RunTargetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RunTargetResponse {
    return new RunTargetResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a: RunTargetResponse | PlainMessage<RunTargetResponse> | undefined,
    b: RunTargetResponse | PlainMessage<RunTargetResponse> | undefined
  ): boolean {
    return proto3.util.equals(RunTargetResponse, a, b);
  }
}
